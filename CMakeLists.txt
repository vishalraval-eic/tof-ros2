cmake_minimum_required(VERSION 3.5)
project(tof_ros2cpp)

list(APPEND CMAKE_PREFIX_PATH "/usr/local/lib;/opt/glog;/opt/protobuf;/opt/websockets;~/ToF_Workspace/libs")
list(APPEND AMENT_PREFIX_PATH "/usr/local;/opt/glog;/opt/protobuf;/opt/websockets;~/ToF_Workspace/libs;")
set(CMAKE_INSTALL_RPATH "/usr/local/lib;/opt/glog/lib;/opt/websockets/lib;~/ToF_Workspace/libs;")


# Default to C++14
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(std_msgs REQUIRED)
find_package(sensor_msgs REQUIRED)
find_package(aditof REQUIRED)
find_package(Libwebsockets REQUIRED)
find_package(glog REQUIRED)
find_package(Protobuf REQUIRED)

set(ADITOF_MIN_VERSION "4.3.0")

if(aditof_VERSION VERSION_LESS ${ADITOF_MIN_VERSION})
    message(FATAL_ERROR "You can not compile with aditof version less than ${ADITOF_MIN_VERSION}" )
else()
    message(STATUS "Compiling with aditof_VERSION ${aditof_VERSION}")
endif()

find_library(TOFI_COMPUTE
  NAMES tofi_compute
  PATHS ~/ToF_Workspace/libs)

find_library(TOFI_CONFIG
  NAMES tofi_config
  PATHS ~/ToF_Workspace/libs )


if(UNIX)
    set(CMAKE_POSITION_INDEPENDENT_CODE "1")
endif()

set(SOURCE ${CMAKE_SOURCE_DIR}/include/tof-ros2)
set(SOURCES ${CMAKE_SOURCE_DIR}/include/tof_ros2cpp)

FILE(GLOB_RECURSE HeaderFiles ${CMAKE_SOURCE_DIR}/include/tof_ros2cpp/*.h)
file(GLOB SOURCES SourceFiles ${CMAKE_SOURCE_DIR}/src/*.cpp)

add_executable(tof_ros2cpp_node ${CMAKE_CURRENT_SOURCE_DIR}/src/tof_camera_node.cpp ${SOURCES} ${HeaderFiles} ${SourceFiles})

target_include_directories(tof_ros2cpp_node PUBLIC ${CMAKE_SOURCE_DIR}/include/tof_ros2cpp)
target_sources(tof_ros2cpp_node INTERFACE ${CMAKE_SOURCE_DIR}/include/tof_ros2cpp)

ament_target_dependencies(tof_ros2cpp_node rclcpp std_msgs glog sensor_msgs)

target_link_libraries(tof_ros2cpp_node websockets_shared)
target_link_libraries(tof_ros2cpp_node  ~/ToF_Workspace/libs/libtofi_compute.so)
target_link_libraries(tof_ros2cpp_node  ~/ToF_Workspace/libs/libtofi_config.so)
target_link_libraries(tof_ros2cpp_node glog::glog)
target_link_libraries(tof_ros2cpp_node aditof)
target_include_directories(tof_ros2cpp_node PUBLIC "${ADITOF_INCLUDE_DIRS}")
target_include_directories(tof_ros2cpp_node PUBLIC "${LIBWEBSOCKETS_INCLUDE_DIRS}")

install(TARGETS
tof_ros2cpp_node
  DESTINATION lib/${PROJECT_NAME}
)

install(DIRECTORY
  config
  DESTINATION share/${PROJECT_NAME}
)

## Copying config files and depth compute libraries from sdk/config, sdk/lib folders to build/examples/first-frame and build/first-frame/Debug or Release folders
FILE(GLOB CONFIG_FILES ${CMAKE_CURRENT_SOURCE_DIR}/tof_config/*)
FILE(GLOB JSON_FILES ${CMAKE_CURRENT_SOURCE_DIR}/tof_config/*.json)
#install(FILES ${CONFIG_FILES} DESTINATION lib/../../../config/)
install(FILES ${CONFIG_FILES} DESTINATION share/${PROJECT_NAME}/config/)
# Install command to modify JSON files during installation
install(CODE "
    # Get the list of JSON files
    set(JSON_FILES \"${JSON_FILES}\")

    message(STATUS \"JSON Files in install: \${JSON_FILES}\")
    foreach(JSON_FILE \${JSON_FILES})
        get_filename_component(FILENAME \${JSON_FILE} NAME)
        file(READ \${JSON_FILE} JSON_CONTENT)
        string(REPLACE \"./config\" \"${CMAKE_INSTALL_PREFIX}/share/${PROJECT_NAME}/config\" MODIFIED_JSON_CONTENT \"\${JSON_CONTENT}\")
        file(WRITE  \"${CMAKE_INSTALL_PREFIX}/share/${PROJECT_NAME}/config/\${FILENAME}\" \"\${MODIFIED_JSON_CONTENT}\")
        message(STATUS \"Updated: \${JSON_FILE}\n\${MODIFIED_JSON_CONTENT}\")
    endforeach()
")
install(DIRECTORY launch DESTINATION share/${PROJECT_NAME})
ament_package()
